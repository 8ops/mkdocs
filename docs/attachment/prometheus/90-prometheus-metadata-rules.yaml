apiVersion: v1
data:
  prometheus.yml: |
    groups:
    - name: prometheus
      rules:
      - alert: PrometheusJobMissing
        annotations:
          description: |-
            A Prometheus job has disappeared
              VALUE = {{ $value }}
              LABELS = {{ $labels }}
          summary: Prometheus job missing (instance {{ $labels.instance }})
        expr: absent(up{job="prometheus"})
        for: 0m
        labels:
          severity: warning
      - alert: PrometheusTargetMissing
        annotations:
          description: |-
            A Prometheus target has disappeared. An exporter might be crashed.
              VALUE = {{ $value }}
              LABELS = {{ $labels }}
          summary: Prometheus target missing (instance {{ $labels.instance }})
        expr: up == 0
        for: 0m
        labels:
          severity: critical
      - alert: PrometheusAllTargetsMissing
        annotations:
          description: |-
            A Prometheus job does not have living target anymore.
              VALUE = {{ $value }}
              LABELS = {{ $labels }}
          summary: Prometheus all targets missing (instance {{ $labels.instance }})
        expr: count by (job) (up) == 0
        for: 0m
        labels:
          severity: critical
      - alert: PrometheusConfigurationReloadFailure
        annotations:
          description: |-
            Prometheus configuration reload error
              VALUE = {{ $value }}
              LABELS = {{ $labels }}
          summary: Prometheus configuration reload failure (instance {{ $labels.instance
            }})
        expr: prometheus_config_last_reload_successful != 1
        for: 0m
        labels:
          severity: warning
      - alert: PrometheusTooManyRestarts
        annotations:
          description: |-
            Prometheus has restarted more than twice in the last 15 minutes. It might be crashlooping.
              VALUE = {{ $value }}
              LABELS = {{ $labels }}
          summary: Prometheus too many restarts (instance {{ $labels.instance }})
        expr: changes(process_start_time_seconds{job=~"prometheus|pushgateway|alertmanager"}[15m])
          > 2
        for: 0m
        labels:
          severity: warning
      - alert: PrometheusAlertmanagerJobMissing
        annotations:
          description: |-
            A Prometheus AlertManager job has disappeared
              VALUE = {{ $value }}
              LABELS = {{ $labels }}
          summary: Prometheus AlertManager job missing (instance {{ $labels.instance }})
        expr: absent(up{job="alertmanager"})
        for: 0m
        labels:
          severity: warning
      - alert: PrometheusAlertmanagerConfigurationReloadFailure
        annotations:
          description: |-
            AlertManager configuration reload error
              VALUE = {{ $value }}
              LABELS = {{ $labels }}
          summary: Prometheus AlertManager configuration reload failure (instance {{ $labels.instance
            }})
        expr: alertmanager_config_last_reload_successful != 1
        for: 0m
        labels:
          severity: warning
      - alert: PrometheusAlertmanagerConfigNotSynced
        annotations:
          description: |-
            Configurations of AlertManager cluster instances are out of sync
              VALUE = {{ $value }}
              LABELS = {{ $labels }}
          summary: Prometheus AlertManager config not synced (instance {{ $labels.instance
            }})
        expr: count(count_values("config_hash", alertmanager_config_hash)) > 1
        for: 0m
        labels:
          severity: warning
      - alert: PrometheusAlertmanagerE2eDeadManSwitch
        annotations:
          description: |-
            Prometheus DeadManSwitch is an always-firing alert. It's used as an end-to-end test of Prometheus through the Alertmanager.
              VALUE = {{ $value }}
              LABELS = {{ $labels }}
          summary: Prometheus AlertManager E2E dead man switch (instance {{ $labels.instance
            }})
        expr: vector(1)
        for: 0m
        labels:
          severity: critical
      - alert: PrometheusNotConnectedToAlertmanager
        annotations:
          description: |-
            Prometheus cannot connect the alertmanager
              VALUE = {{ $value }}
              LABELS = {{ $labels }}
          summary: Prometheus not connected to alertmanager (instance {{ $labels.instance
            }})
        expr: prometheus_notifications_alertmanagers_discovered < 1
        for: 0m
        labels:
          severity: critical
      - alert: PrometheusRuleEvaluationFailures
        annotations:
          description: |-
            Prometheus encountered {{ $value }} rule evaluation failures, leading to potentially ignored alerts.
              VALUE = {{ $value }}
              LABELS = {{ $labels }}
          summary: Prometheus rule evaluation failures (instance {{ $labels.instance }})
        expr: increase(prometheus_rule_evaluation_failures_total[3m]) > 0
        for: 0m
        labels:
          severity: critical
      - alert: PrometheusTemplateTextExpansionFailures
        annotations:
          description: |-
            Prometheus encountered {{ $value }} template text expansion failures
              VALUE = {{ $value }}
              LABELS = {{ $labels }}
          summary: Prometheus template text expansion failures (instance {{ $labels.instance
            }})
        expr: increase(prometheus_template_text_expansion_failures_total[3m]) > 0
        for: 0m
        labels:
          severity: critical
      - alert: PrometheusRuleEvaluationSlow
        annotations:
          description: |-
            Prometheus rule evaluation took more time than the scheduled interval. It indicates a slower storage backend access or too complex query.
              VALUE = {{ $value }}
              LABELS = {{ $labels }}
          summary: Prometheus rule evaluation slow (instance {{ $labels.instance }})
        expr: prometheus_rule_group_last_duration_seconds > prometheus_rule_group_interval_seconds
        for: 5m
        labels:
          severity: warning
      - alert: PrometheusNotificationsBacklog
        annotations:
          description: |-
            The Prometheus notification queue has not been empty for 10 minutes
              VALUE = {{ $value }}
              LABELS = {{ $labels }}
          summary: Prometheus notifications backlog (instance {{ $labels.instance }})
        expr: min_over_time(prometheus_notifications_queue_length[10m]) > 0
        for: 0m
        labels:
          severity: warning
      - alert: PrometheusAlertmanagerNotificationFailing
        annotations:
          description: |-
            Alertmanager is failing sending notifications
              VALUE = {{ $value }}
              LABELS = {{ $labels }}
          summary: Prometheus AlertManager notification failing (instance {{ $labels.instance
            }})
        expr: rate(alertmanager_notifications_failed_total[1m]) > 0
        for: 0m
        labels:
          severity: critical
      - alert: PrometheusTargetEmpty
        annotations:
          description: |-
            Prometheus has no target in service discovery
              VALUE = {{ $value }}
              LABELS = {{ $labels }}
          summary: Prometheus target empty (instance {{ $labels.instance }})
        expr: prometheus_sd_discovered_targets == 0
        for: 0m
        labels:
          severity: critical
      - alert: PrometheusTargetScrapingSlow
        annotations:
          description: |-
            Prometheus is scraping exporters slowly
              VALUE = {{ $value }}
              LABELS = {{ $labels }}
          summary: Prometheus target scraping slow (instance {{ $labels.instance }})
        expr: prometheus_target_interval_length_seconds{quantile="0.9"} > 60
        for: 5m
        labels:
          severity: warning
      - alert: PrometheusLargeScrape
        annotations:
          description: |-
            Prometheus has many scrapes that exceed the sample limit
              VALUE = {{ $value }}
              LABELS = {{ $labels }}
          summary: Prometheus large scrape (instance {{ $labels.instance }})
        expr: increase(prometheus_target_scrapes_exceeded_sample_limit_total[10m]) > 10
        for: 5m
        labels:
          severity: warning
      - alert: PrometheusTargetScrapeDuplicate
        annotations:
          description: |-
            Prometheus has many samples rejected due to duplicate timestamps but different values
              VALUE = {{ $value }}
              LABELS = {{ $labels }}
          summary: Prometheus target scrape duplicate (instance {{ $labels.instance }})
        expr: increase(prometheus_target_scrapes_sample_duplicate_timestamp_total[5m])
          > 0
        for: 0m
        labels:
          severity: warning
      - alert: PrometheusTsdbCheckpointCreationFailures
        annotations:
          description: |-
            Prometheus encountered {{ $value }} checkpoint creation failures
              VALUE = {{ $value }}
              LABELS = {{ $labels }}
          summary: Prometheus TSDB checkpoint creation failures (instance {{ $labels.instance
            }})
        expr: increase(prometheus_tsdb_checkpoint_creations_failed_total[1m]) > 0
        for: 0m
        labels:
          severity: critical
      - alert: PrometheusTsdbCheckpointDeletionFailures
        annotations:
          description: |-
            Prometheus encountered {{ $value }} checkpoint deletion failures
              VALUE = {{ $value }}
              LABELS = {{ $labels }}
          summary: Prometheus TSDB checkpoint deletion failures (instance {{ $labels.instance
            }})
        expr: increase(prometheus_tsdb_checkpoint_deletions_failed_total[1m]) > 0
        for: 0m
        labels:
          severity: critical
      - alert: PrometheusTsdbCompactionsFailed
        annotations:
          description: |-
            Prometheus encountered {{ $value }} TSDB compactions failures
              VALUE = {{ $value }}
              LABELS = {{ $labels }}
          summary: Prometheus TSDB compactions failed (instance {{ $labels.instance }})
        expr: increase(prometheus_tsdb_compactions_failed_total[1m]) > 0
        for: 0m
        labels:
          severity: critical
      - alert: PrometheusTsdbHeadTruncationsFailed
        annotations:
          description: |-
            Prometheus encountered {{ $value }} TSDB head truncation failures
              VALUE = {{ $value }}
              LABELS = {{ $labels }}
          summary: Prometheus TSDB head truncations failed (instance {{ $labels.instance
            }})
        expr: increase(prometheus_tsdb_head_truncations_failed_total[1m]) > 0
        for: 0m
        labels:
          severity: critical
      - alert: PrometheusTsdbReloadFailures
        annotations:
          description: |-
            Prometheus encountered {{ $value }} TSDB reload failures
              VALUE = {{ $value }}
              LABELS = {{ $labels }}
          summary: Prometheus TSDB reload failures (instance {{ $labels.instance }})
        expr: increase(prometheus_tsdb_reloads_failures_total[1m]) > 0
        for: 0m
        labels:
          severity: critical
      - alert: PrometheusTsdbWalCorruptions
        annotations:
          description: |-
            Prometheus encountered {{ $value }} TSDB WAL corruptions
              VALUE = {{ $value }}
              LABELS = {{ $labels }}
          summary: Prometheus TSDB WAL corruptions (instance {{ $labels.instance }})
        expr: increase(prometheus_tsdb_wal_corruptions_total[1m]) > 0
        for: 0m
        labels:
          severity: critical
      - alert: PrometheusTsdbWalTruncationsFailed
        annotations:
          description: |-
            Prometheus encountered {{ $value }} TSDB WAL truncation failures
              VALUE = {{ $value }}
              LABELS = {{ $labels }}
          summary: Prometheus TSDB WAL truncations failed (instance {{ $labels.instance
            }})
        expr: increase(prometheus_tsdb_wal_truncations_failed_total[1m]) > 0
        for: 0m
        labels:
          severity: critical
  kubernetes.yml: |
    groups:
    - name: kubernetes
      rules:
      - alert: KubernetesNodeReady
        annotations:
          description: |-
            Node {{ $labels.node }} has been unready for a long time
              VALUE = {{ $value }}
              LABELS = {{ $labels }}
          summary: Kubernetes Node ready (instance {{ $labels.instance }})
        expr: kube_node_status_condition{condition="Ready",status="true"} == 0
        for: 10m
        labels:
          severity: critical
      - alert: KubernetesMemoryPressure
        annotations:
          description: |-
            {{ $labels.node }} has MemoryPressure condition
              VALUE = {{ $value }}
              LABELS = {{ $labels }}
          summary: Kubernetes memory pressure (instance {{ $labels.instance }})
        expr: kube_node_status_condition{condition="MemoryPressure",status="true"} ==
          1
        for: 2m
        labels:
          severity: critical
      - alert: KubernetesDiskPressure
        annotations:
          description: |-
            {{ $labels.node }} has DiskPressure condition
              VALUE = {{ $value }}
              LABELS = {{ $labels }}
          summary: Kubernetes disk pressure (instance {{ $labels.instance }})
        expr: kube_node_status_condition{condition="DiskPressure",status="true"} == 1
        for: 2m
        labels:
          severity: critical
      - alert: KubernetesOutOfDisk
        annotations:
          description: |-
            {{ $labels.node }} has OutOfDisk condition
              VALUE = {{ $value }}
              LABELS = {{ $labels }}
          summary: Kubernetes out of disk (instance {{ $labels.instance }})
        expr: kube_node_status_condition{condition="OutOfDisk",status="true"} == 1
        for: 2m
        labels:
          severity: critical
      - alert: KubernetesOutOfCapacity
        annotations:
          description: |-
            {{ $labels.node }} is out of capacity
              VALUE = {{ $value }}
              LABELS = {{ $labels }}
          summary: Kubernetes out of capacity (instance {{ $labels.instance }})
        expr: sum by (node) ((kube_pod_status_phase{phase="Running"} == 1) + on(uid) group_left(node)
          (0 * kube_pod_info{pod_template_hash=""})) / sum by (node) (kube_node_status_allocatable{resource="pods"})
          * 100 > 90
        for: 2m
        labels:
          severity: warning
      - alert: KubernetesContainerOomKiller
        annotations:
          description: |-
            Container {{ $labels.container }} in pod {{ $labels.namespace }}/{{ $labels.pod }} has been OOMKilled {{ $value }} times in the last 10 minutes.
              VALUE = {{ $value }}
              LABELS = {{ $labels }}
          summary: Kubernetes container oom killer (instance {{ $labels.instance }})
        expr: (kube_pod_container_status_restarts_total - kube_pod_container_status_restarts_total
          offset 10m >= 1) and ignoring (reason) min_over_time(kube_pod_container_status_last_terminated_reason{reason="OOMKilled"}[10m])
          == 1
        for: 0m
        labels:
          severity: warning
      - alert: KubernetesJobFailed
        annotations:
          description: |-
            Job {{$labels.namespace}}/{{$labels.exported_job}} failed to complete
              VALUE = {{ $value }}
              LABELS = {{ $labels }}
          summary: Kubernetes Job failed (instance {{ $labels.instance }})
        expr: kube_job_status_failed > 0
        for: 0m
        labels:
          severity: warning
      - alert: KubernetesCronjobSuspended
        annotations:
          description: |-
            CronJob {{ $labels.namespace }}/{{ $labels.cronjob }} is suspended
              VALUE = {{ $value }}
              LABELS = {{ $labels }}
          summary: Kubernetes CronJob suspended (instance {{ $labels.instance }})
        expr: kube_cronjob_spec_suspend != 0
        for: 0m
        labels:
          severity: warning
      - alert: KubernetesPersistentvolumeclaimPending
        annotations:
          description: |-
            PersistentVolumeClaim {{ $labels.namespace }}/{{ $labels.persistentvolumeclaim }} is pending
              VALUE = {{ $value }}
              LABELS = {{ $labels }}
          summary: Kubernetes PersistentVolumeClaim pending (instance {{ $labels.instance
            }})
        expr: kube_persistentvolumeclaim_status_phase{phase="Pending"} == 1
        for: 2m
        labels:
          severity: warning
      - alert: KubernetesVolumeOutOfDiskSpace
        annotations:
          description: |-
            Volume is almost full (< 10% left)
              VALUE = {{ $value }}
              LABELS = {{ $labels }}
          summary: Kubernetes Volume out of disk space (instance {{ $labels.instance }})
        expr: kubelet_volume_stats_available_bytes / kubelet_volume_stats_capacity_bytes
          * 100 < 10
        for: 2m
        labels:
          severity: warning
      - alert: KubernetesVolumeFullInFourDays
        annotations:
          description: |-
            {{ $labels.namespace }}/{{ $labels.persistentvolumeclaim }} is expected to fill up within four days. Currently {{ $value | humanize }}% is available.
              VALUE = {{ $value }}
              LABELS = {{ $labels }}
          summary: Kubernetes Volume full in four days (instance {{ $labels.instance }})
        expr: predict_linear(kubelet_volume_stats_available_bytes[6h], 4 * 24 * 3600)
          < 0
        for: 0m
        labels:
          severity: critical
      - alert: KubernetesPersistentvolumeError
        annotations:
          description: |-
            Persistent volume is in bad state
              VALUE = {{ $value }}
              LABELS = {{ $labels }}
          summary: Kubernetes PersistentVolume error (instance {{ $labels.instance }})
        expr: kube_persistentvolume_status_phase{phase=~"Failed|Pending", job="kube-state-metrics"}
          > 0
        for: 0m
        labels:
          severity: critical
      - alert: KubernetesStatefulsetDown
        annotations:
          description: |-
            A StatefulSet went down
              VALUE = {{ $value }}
              LABELS = {{ $labels }}
          summary: Kubernetes StatefulSet down (instance {{ $labels.instance }})
        expr: (kube_statefulset_status_replicas_ready / kube_statefulset_status_replicas_current)
          != 1
        for: 1m
        labels:
          severity: critical
      - alert: KubernetesHpaScalingAbility
        annotations:
          description: |-
            Pod is unable to scale
              VALUE = {{ $value }}
              LABELS = {{ $labels }}
          summary: Kubernetes HPA scaling ability (instance {{ $labels.instance }})
        expr: kube_horizontalpodautoscaler_status_condition{status="false", condition="AbleToScale"}
          == 1
        for: 2m
        labels:
          severity: warning
      - alert: KubernetesHpaMetricAvailability
        annotations:
          description: |-
            HPA is not able to collect metrics
              VALUE = {{ $value }}
              LABELS = {{ $labels }}
          summary: Kubernetes HPA metric availability (instance {{ $labels.instance }})
        expr: kube_horizontalpodautoscaler_status_condition{status="false", condition="ScalingActive"}
          == 1
        for: 0m
        labels:
          severity: warning
      - alert: KubernetesHpaScaleCapability
        annotations:
          description: |-
            The maximum number of desired Pods has been hit
              VALUE = {{ $value }}
              LABELS = {{ $labels }}
          summary: Kubernetes HPA scale capability (instance {{ $labels.instance }})
        expr: kube_horizontalpodautoscaler_status_desired_replicas >= kube_horizontalpodautoscaler_spec_max_replicas
        for: 2m
        labels:
          severity: info
      - alert: KubernetesPodNotHealthy
        annotations:
          description: |-
            Pod has been in a non-ready state for longer than 15 minutes.
              VALUE = {{ $value }}
              LABELS = {{ $labels }}
          summary: Kubernetes Pod not healthy (instance {{ $labels.instance }})
        expr: min_over_time(sum by (namespace, pod) (kube_pod_status_phase{phase=~"Pending|Unknown|Failed"})[15m:1m])
          > 0
        for: 0m
        labels:
          severity: critical
      - alert: KubernetesPodCrashLooping
        annotations:
          description: |-
            Pod {{ $labels.pod }} is crash looping
              VALUE = {{ $value }}
              LABELS = {{ $labels }}
          summary: Kubernetes pod crash looping (instance {{ $labels.instance }})
        expr: increase(kube_pod_container_status_restarts_total[1m]) > 3
        for: 2m
        labels:
          severity: warning
      - alert: KubernetesReplicassetMismatch
        annotations:
          description: |-
            Deployment Replicas mismatch
              VALUE = {{ $value }}
              LABELS = {{ $labels }}
          summary: Kubernetes ReplicasSet mismatch (instance {{ $labels.instance }})
        expr: kube_replicaset_spec_replicas != kube_replicaset_status_ready_replicas
        for: 10m
        labels:
          severity: warning
      - alert: KubernetesDeploymentReplicasMismatch
        annotations:
          description: |-
            Deployment Replicas mismatch
              VALUE = {{ $value }}
              LABELS = {{ $labels }}
          summary: Kubernetes Deployment replicas mismatch (instance {{ $labels.instance
            }})
        expr: kube_deployment_spec_replicas != kube_deployment_status_replicas_available
        for: 10m
        labels:
          severity: warning
      - alert: KubernetesStatefulsetReplicasMismatch
        annotations:
          description: |-
            A StatefulSet does not match the expected number of replicas.
              VALUE = {{ $value }}
              LABELS = {{ $labels }}
          summary: Kubernetes StatefulSet replicas mismatch (instance {{ $labels.instance
            }})
        expr: kube_statefulset_status_replicas_ready != kube_statefulset_status_replicas
        for: 10m
        labels:
          severity: warning
      - alert: KubernetesDeploymentGenerationMismatch
        annotations:
          description: |-
            A Deployment has failed but has not been rolled back.
              VALUE = {{ $value }}
              LABELS = {{ $labels }}
          summary: Kubernetes Deployment generation mismatch (instance {{ $labels.instance
            }})
        expr: kube_deployment_status_observed_generation != kube_deployment_metadata_generation
        for: 10m
        labels:
          severity: critical
      - alert: KubernetesStatefulsetGenerationMismatch
        annotations:
          description: |-
            A StatefulSet has failed but has not been rolled back.
              VALUE = {{ $value }}
              LABELS = {{ $labels }}
          summary: Kubernetes StatefulSet generation mismatch (instance {{ $labels.instance
            }})
        expr: kube_statefulset_status_observed_generation != kube_statefulset_metadata_generation
        for: 10m
        labels:
          severity: critical
      - alert: KubernetesStatefulsetUpdateNotRolledOut
        annotations:
          description: |-
            StatefulSet update has not been rolled out.
              VALUE = {{ $value }}
              LABELS = {{ $labels }}
          summary: Kubernetes StatefulSet update not rolled out (instance {{ $labels.instance
            }})
        expr: max without (revision) (kube_statefulset_status_current_revision unless
          kube_statefulset_status_update_revision) * (kube_statefulset_replicas != kube_statefulset_status_replicas_updated)
        for: 10m
        labels:
          severity: warning
      - alert: KubernetesDaemonsetRolloutStuck
        annotations:
          description: |-
            Some Pods of DaemonSet are not scheduled or not ready
              VALUE = {{ $value }}
              LABELS = {{ $labels }}
          summary: Kubernetes DaemonSet rollout stuck (instance {{ $labels.instance }})
        expr: kube_daemonset_status_number_ready / kube_daemonset_status_desired_number_scheduled
          * 100 < 100 or kube_daemonset_status_desired_number_scheduled - kube_daemonset_status_current_number_scheduled
          > 0
        for: 10m
        labels:
          severity: warning
      - alert: KubernetesDaemonsetMisscheduled
        annotations:
          description: |-
            Some DaemonSet Pods are running where they are not supposed to run
              VALUE = {{ $value }}
              LABELS = {{ $labels }}
          summary: Kubernetes DaemonSet misscheduled (instance {{ $labels.instance }})
        expr: kube_daemonset_status_number_misscheduled > 0
        for: 1m
        labels:
          severity: critical
      - alert: KubernetesCronjobTooLong
        annotations:
          description: |-
            CronJob {{ $labels.namespace }}/{{ $labels.cronjob }} is taking more than 1h to complete.
              VALUE = {{ $value }}
              LABELS = {{ $labels }}
          summary: Kubernetes CronJob too long (instance {{ $labels.instance }})
        expr: time() - kube_cronjob_next_schedule_time > 3600
        for: 0m
        labels:
          severity: warning
      - alert: KubernetesJobSlowCompletion
        annotations:
          description: |-
            Kubernetes Job {{ $labels.namespace }}/{{ $labels.job_name }} did not complete in time.
              VALUE = {{ $value }}
              LABELS = {{ $labels }}
          summary: Kubernetes job slow completion (instance {{ $labels.instance }})
        expr: kube_job_spec_completions - kube_job_status_succeeded > 0
        for: 12h
        labels:
          severity: critical
      - alert: KubernetesApiServerErrors
        annotations:
          description: |-
            Kubernetes API server is experiencing high error rate
              VALUE = {{ $value }}
              LABELS = {{ $labels }}
          summary: Kubernetes API server errors (instance {{ $labels.instance }})
        expr: sum(rate(apiserver_request_total{job="apiserver",code=~"^(?:5..)$"}[1m]))
          / sum(rate(apiserver_request_total{job="apiserver"}[1m])) * 100 > 3
        for: 2m
        labels:
          severity: critical
      - alert: KubernetesApiClientErrors
        annotations:
          description: |-
            Kubernetes API client is experiencing high error rate
              VALUE = {{ $value }}
              LABELS = {{ $labels }}
          summary: Kubernetes API client errors (instance {{ $labels.instance }})
        expr: (sum(rate(rest_client_requests_total{code=~"(4|5).."}[1m])) by (instance,
          job) / sum(rate(rest_client_requests_total[1m])) by (instance, job)) * 100 >
          1
        for: 2m
        labels:
          severity: critical
      - alert: KubernetesClientCertificateExpiresNextWeek
        annotations:
          description: |-
            A client certificate used to authenticate to the apiserver is expiring next week.
              VALUE = {{ $value }}
              LABELS = {{ $labels }}
          summary: Kubernetes client certificate expires next week (instance {{ $labels.instance
            }})
        expr: apiserver_client_certificate_expiration_seconds_count{job="apiserver"} >
          0 and histogram_quantile(0.01, sum by (job, le) (rate(apiserver_client_certificate_expiration_seconds_bucket{job="apiserver"}[5m])))
          < 7*24*60*60
        for: 0m
        labels:
          severity: warning
      - alert: KubernetesClientCertificateExpiresSoon
        annotations:
          description: |-
            A client certificate used to authenticate to the apiserver is expiring in less than 24.0 hours.
              VALUE = {{ $value }}
              LABELS = {{ $labels }}
          summary: Kubernetes client certificate expires soon (instance {{ $labels.instance
            }})
        expr: apiserver_client_certificate_expiration_seconds_count{job="apiserver"} >
          0 and histogram_quantile(0.01, sum by (job, le) (rate(apiserver_client_certificate_expiration_seconds_bucket{job="apiserver"}[5m])))
          < 24*60*60
        for: 0m
        labels:
          severity: critical
      - alert: KubernetesApiServerLatency
        annotations:
          description: |-
            Kubernetes API server has a 99th percentile latency of {{ $value }} seconds for {{ $labels.verb }} {{ $labels.resource }}.
              VALUE = {{ $value }}
              LABELS = {{ $labels }}
          summary: Kubernetes API server latency (instance {{ $labels.instance }})
        expr: histogram_quantile(0.99, sum(rate(apiserver_request_latencies_bucket{subresource!="log",verb!~"^(?:CONNECT|WATCHLIST|WATCH|PROXY)$"}
          [10m])) WITHOUT (instance, resource)) / 1e+06 > 1
        for: 2m
        labels:
          severity: warning
kind: ConfigMap
metadata:
  labels:
    app: prometheus-metadata-rules
  name: prometheus-metadata-rules
  namespace: kube-server
